package com.his.controller;

import java.math.BigDecimal;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.his.entity.Hospitalization;
import com.his.entity.Prescription;
import com.his.entity.Staff;
import com.his.service.HospitalizationService;
import com.his.service.PrescriptionService;
import com.his.utils.ResponseResult;

@Controller
@RequestMapping("/api")
public class HospitalizationController {

	@Autowired
	private HospitalizationService hospitalizationService;
	@Autowired
	private PrescriptionService prescriptionService;
	
	@RequestMapping("/addHospitalization")
	@ResponseBody
	public ResponseResult addHospitalization(HttpSession session) {
		//从session里面拿到门诊医生的id
		Staff staff = (Staff) session.getAttribute("staff");
		//调用门诊医生根据病人id创建住院信息表方法
		int count = hospitalizationService.addHospitalization(staff.getStaffId());
		if(count>0) {
			return new ResponseResult("true", "添加成功");
		}else {
			return new ResponseResult("false", "添加成功");
		}
	}
	@RequestMapping("/updateHospitalization")
	@ResponseBody
	public ResponseResult updateHospitalization(String uuid,@RequestBody Hospitalization hospitalization,HttpSession session) {
		
		BigDecimal totalprice = null;
		//得到药方的费用
		List<Prescription> listp = prescriptionService.findPrescriptionByCode(uuid);
		for (Prescription prescription : listp) {
			totalprice = prescription.getPrescriptionTotalprice();
		}
		//得到住院医生的对象
		Staff staff = (Staff) session.getAttribute("staff");
		//得到住院医生的诊疗费
		BigDecimal bigDecimal = new BigDecimal(staff.getStaffCost());
		//计算总天数的费用
		BigDecimal bigDecimal2 = new BigDecimal(hospitalization.getHospitalizationDays()*200);
		//计算总费用（总天数的费用+药单的费用+住院医生的诊疗费）
		totalprice = totalprice.add(bigDecimal2).add(bigDecimal);
		
		//添加修改住院表的内容
		hospitalization.setHospitalizationCost(totalprice);
		hospitalization.setHospitalizationStaffId(staff.getStaffId());
		int count = hospitalizationService.updateHospitalization(hospitalization);
		if(count>0) {
			return new ResponseResult("true", "修改成功");
		}else {
			return new ResponseResult("false", "修改失败");
		}
		
	}

	public void setHospitalizationService(HospitalizationService hospitalizationService) {
		this.hospitalizationService = hospitalizationService;
	}
	
}
