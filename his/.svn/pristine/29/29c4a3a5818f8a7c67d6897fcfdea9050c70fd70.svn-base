package com.his.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.his.entity.Department;
import com.his.entity.Registration;
import com.his.entity.Staff;
import com.his.service.DepartmentService;
import com.his.service.QueueService;
import com.his.service.RegistrationService;
import com.his.utils.ResponseResult;

@Controller
@RequestMapping("/api")
public class RegistrationController {
	@Autowired
	private RegistrationService registrationService;
	@Autowired
	private DepartmentService departmentService;
	@Autowired
	private QueueService queueService;

	@RequestMapping("/findRegistrationById")
	@ResponseBody
	public ResponseResult findRegistrationById(Integer id,Model model) {
		//根据挂号单编号查询挂号单
		List<Registration> listr = registrationService.findRegistrationById(id);
		if(listr.size()>0) {
			model.addAttribute("listr", listr);
			return new ResponseResult("true", "查询成功", listr);
		}else {
			return new ResponseResult("false", "查询失败");
		}
		
	}
	@RequestMapping("/addRegistration")
	@ResponseBody
	public ResponseResult addRegistration(@RequestBody Registration registration,HttpSession session) {
		//给registration对象赋值
		//Patient patient = (Patient) session.getAttribute("patient");
		Department department = departmentService.findDepartmentById(2);
		registration.setRegistrationPatientId(1);
		registration.setRegistrationDepartmentId(2);
		registration.setRegistrationCost(department.getDepartmentCost());
		//添加挂号单
		int count = registrationService.addRegistration(registration);
		if(count>0) {
			return new ResponseResult("true", "添加成功");
		}
		return new ResponseResult("false", "添加失败");
		
	}
	@RequestMapping("/updateRegistration")
	@ResponseBody
	public ResponseResult updateRegistration(Integer regId,HttpSession session) {
		//从session里面,拿出来医生的id
		Staff staff = (Staff) session.getAttribute("staff");
		Map<String, Object> segMap = new HashMap<>();
		segMap.put("staffId", staff.getStaffId());
		segMap.put("regId", regId);
		//调用医生修改挂号状态方法
		int count = registrationService.updateRegistration(segMap);
		if(count>0) {
			queueService.delQueue(regId);
			return new ResponseResult("true", "修改成功");
		}
		return new ResponseResult("false", "修改失败");
		
	}
	@RequestMapping("/updateReg")
	@ResponseBody
	public ResponseResult updateReg(Integer regId) {
		//调用病人退号方法
		int count = registrationService.updateReg(regId);
		if(count>0) {
			return new ResponseResult("true", "修改成功");
		}
		return new ResponseResult("false", "修改失败");
		
	}

	public void setRegistrationService(RegistrationService registrationService) {
		this.registrationService = registrationService;
	}
	public void setDepartmentService(DepartmentService departmentService) {
		this.departmentService = departmentService;
	}
	
}
